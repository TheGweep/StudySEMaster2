import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
import java.io.*;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.nio.charset.StandardCharsets;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.Formatter;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Main {

    private Main() {
        //Main.getMac();
    }

    public static void main(String[] args) throws UnknownHostException, SocketException {
        try {
            //InetAddress address = InetAddress.getLocalHost();

            InetAddress address = InetAddress.getByName(InetAddress.getLocalHost().getHostAddress());

            /*
             * Get NetworkInterface for the current host and then read the
             * hardware address.
             */
            PrintStream s = null;
            NetworkInterface ni = NetworkInterface.getByInetAddress(address);
            if (ni != null) {
                byte[] mac = ni.getHardwareAddress();
                if (mac != null) {
                    /*
                     * Extract each array of mac address and convert it to hexa with the
                     * following format 08-00-27-DC-4A-9E.
                     */
                    String s2 = "";
                    String s1 = "";
                    int length = 0;
                    Formatter f = new Formatter();
                    String strMac = "dc85de1ea7bb";
                    File file = new File("Mac.txt");
                    file.createNewFile();
                    //File file1 = new File("CopyMac.txt");
                    FileWriter fileWriter = new FileWriter(file);
                    BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
                    bufferedWriter.write(strMac);
                    bufferedWriter.flush();
                    bufferedWriter.close();
                  /*  for (int i = 0; i < mac.length; i++) {
                        s = (System.out.format("%02x%s", mac[i], (i < mac.length - 1) ? "" : ""));
                    }*/
                    // System.out.println();
                    System.out.print("Ваш Mac-адресс: ");
                    for (int i = 0; i < mac.length; i++) {
                        length = mac.length;
                        System.out.print(Integer.toHexString(mac[i] & 0xFF));
                        s2 += String.valueOf(Integer.toHexString(mac[i] & 0xFF));
                    }
                    String date2Str = "";
                    System.out.println();
                    if (s2.equals(strMac)) {
                        System.out.println("Мак адрес совпадает");
                        File file1 = new File("CopyMac.txt");
                        Files.copy(file.toPath(), file1.toPath());
                        /*FileReader fileReader = new FileReader(file1);
                        BufferedReader bufferedReader = new BufferedReader(fileReader);
                        while (bufferedReader.ready())
                        {
                           date2Str = bufferedReader.readLine();
                        }*/

                        System.out.println("Копирование завершено.");

                    }
                    //System.out.println();
                    // System.out.println(s2);

                } else {
                    System.out.println("Address doesn't exist or is not accessible.");
                }
            } else {
                System.out.println("Network Interface for the specified address is not found.");
            }
        } catch (UnknownHostException e) {
            e.printStackTrace();
        } catch (SocketException e) {
            e.printStackTrace();
        } catch (FileAlreadyExistsException e) {

        } catch (IOException e) {
            e.printStackTrace();
        }
        //new Main();
        /*private static void getMac ()
        {

        }*/

    }
}
